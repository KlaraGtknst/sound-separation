_target_: src.datamodules.bird_datamodule.BirdsetDataModule

defaults:
  - _self_
  - loaders: default.yaml
  - transforms: default.yaml


hf_dataset:
  # will be used as kwargs in load_dataset(**hf_dataset) - mapping and filter
  path: "DBD-research-group/BirdSet"
  name: "XCM"
  cache_dir: ${paths.data_dir}/${datamodule.hf_dataset.name}
  trust_remote_code: True
  split: train
  #num_proc: 5

  select_columns: [audio, filepath, start_time, end_time, ebird_code, length, quality, ebird_code_secondary]
  # ebird_code_secondary

  # mappings are done first, internal order of 0,1...
  mapping:
    0:
      _target_: src.datamodules.components.hf_mappings.LoadLengths
    1:
      _target_: src.datamodules.components.hf_mappings.FindSupervised
      length: 10
      qualitys: [A,B]
      secondarys_max: 0
    2:
      _target_: src.datamodules.components.hf_mappings.AudioSegmenting
      segment_length: 10
      max_segments: 5  # i.e. segment_length * max_segments = max audio length

  filter:
    0:
      _target_: src.datamodules.components.hf_filter.AudioLengthFilter
      min_len: 3
      max_len: 10


datasets:
  train:
    _target_: src.datamodules.datasets.BirdsetDataset
    sample_rate: 16000
    column_selection: ["audio", "mix", "start_time", "end_time", is_supervised]

  valid:
    _target_: src.datamodules.datasets.BirdsetDataset
    sample_rate: ${datamodule.datasets.train.sample_rate}
    column_selection: ["audio", "mix", "start_time", "end_time", is_supervised]

  test:
    _target_: src.datamodules.datasets.BirdsetDataset
    sample_rate: ${datamodule.datasets.train.sample_rate}
    column_selection: ["audio", "mix", "start_time", "end_time", is_supervised]