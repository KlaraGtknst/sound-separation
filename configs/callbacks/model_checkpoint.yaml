# https://pytorch-lightning.readthedocs.io/en/latest/api/pytorch_lightning.callbacks.ModelCheckpoint.html

# Save the model periodically by monitoring a quantity.
# Look at the above link for more detailed information.

# To avoiding copying of loss and metric names, during hydra initialization
# there is custom resolver which replaces __loss__ to loss.__class__.__name__
# and __metric__ to main_metric.__class__.__name__,
# for example: ${replace:"valid/__metric__"}
# Use quotes for defining internal value in ${replace:"..."} to avoid
# grammar problems with hydra config parser.

model_checkpoint:
  _target_: pytorch_lightning.callbacks.ModelCheckpoint
  dirpath: /mnt/stud/work/deeplearninglab/ss2024/sound-separation/checkpoints/${datamodule.hf_dataset.name}-no_normal # directory to save the model file
  filename: ${replace:"epoch{epoch:03d}-loss_valid{valid/__loss__:.4f}-metric_valid{valid/__metric__:.4f}"} # checkpoint filename
  monitor: ${replace:"valid/__metric__"} # name of the logged metric which determines when model is improving
  verbose: False # verbosity mode
  save_last: True # additionally always save an exact copy of the last checkpoint to a file last.ckpt
  save_top_k: 5 # save k best models (determined by above metric)
  mode: "max" # "max" means higher metric value is better, can be also "min"
  auto_insert_metric_name: False # when True, the checkpoints filenames will contain the metric name
  save_weights_only: False # if True, then only the modelâ€™s weights will be saved
  every_n_train_steps: null # number of training steps between checkpoints
  train_time_interval: null # checkpoints are monitored at the specified time interval
  every_n_epochs: null # number of epochs between checkpoints
  save_on_train_epoch_end: null # whether to run checkpointing at the end of the training epoch or the end of validation
